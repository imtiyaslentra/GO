local Stats = game:GetService('Stats')
local Players = game:GetService('Players')
local RunService = game:GetService('RunService')
local ReplicatedStorage = game:GetService('ReplicatedStorage')
local Celery_Util = loadstring(game:HttpGet('https://raw.githubusercontent.com/CeleryHub/CeleryHub/main/CeleUtil.lua'))()
local local_player = Players.LocalPlayer
local camera = workspace.CurrentCamera
local celery_Data, closest_Entity, parry_remote = nil, nil, nil -- Global Settings

-- Global settings
getgenv().aura_Enabled = false
getgenv().hit_effect_Enabled = false
getgenv().night_mode_Enabled = false
getgenv().self_effect_Enabled = false
getgenv().auto_parry_Enabled = false
getgenv().auto_spam_Enabled = false

local Services = { game:GetService('AdService'), game:GetService('SocialService') } -- UI Library
local OrionLib = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Orion/main/source'))()
local Window = OrionLib:MakeWindow({ Name = "Lunar Premium Blade Ball", HidePremium = true, SaveConfig = true, ConfigFolder = "cElerytEst" })
local Tab = Window:MakeTab({ Name = "Main", Icon = "rbxassetid://4483345998", PremiumOnly = false })
local Tab3 = Window:MakeTab({ Name = "Visuals", Icon = "rbxassetid://4483345998", PremiumOnly = false })

-- Initialization
local function initialize(dataFolderName)
    if not game:GetService("CoreGui"):FindFirstChild(dataFolderName) then
        celery_Data = Instance.new('Folder', game:GetService('CoreGui'))
        celery_Data.Name = dataFolderName
    end
end

-- Optimize FPS and Network Settings
local function optimizePerformance()
    game:GetService("Workspace").StreamingEnabled = true
    settings().Rendering.QualityLevel = Enum.QualityLevel.Level01 -- Lowest quality for best FPS
    game:GetService("Lighting").GlobalShadows = false -- Disable shadows
    game:GetService("Lighting").Brightness = 2 -- Adjust lighting for smoothness
    game:GetService("UserInputService").MouseDeltaSensitivity = 0.5 -- Reduce mouse lag

    RunService:Set3DRenderingEnabled(false) -- Disable rendering of 3D parts outside view
    setfpscap(120) -- Increase FPS cap to 120 for smoother performance

    OrionLib:MakeNotification({
        Name = "Performance Boosted",
        Content = "FPS boosted, Ping lowered, and smooth gameplay enabled.",
        Image = "rbxassetid://4483345998",
        Time = 5
    })
end

-- UI Toggles
Tab:AddToggle({
    Name = "Aura",
    Default = false,
    Callback = function(Value)
        getgenv().aura_Enabled = Value
        print(Value and "Aura Enabled" or "Aura Disabled")
    end
})

Tab:AddToggle({
    Name = "Hit Effect",
    Default = false,
    Callback = function(Value)
        getgenv().hit_effect_Enabled = Value
        print(Value and "Hit Effect Enabled" or "Hit Effect Disabled")
    end
})

Tab:AddToggle({
    Name = "Auto Parry",
    Default = false,
    Callback = function(Value)
        getgenv().auto_parry_Enabled = Value
        resolveParryRemote() -- Call resolveParryRemote when toggled
        print(Value and "Auto Parry Enabled" or "Auto Parry Disabled")
    end
})

Tab:AddToggle({
    Name = "Auto Spam",
    Default = false,
    Callback = function(Value)
        getgenv().auto_spam_Enabled = Value
        print(Value and "Auto Spam Enabled" or "Auto Spam Disabled")
    end
})

Tab3:AddToggle({
    Name = "Night Mode",
    Default = false,
    Callback = function(Value)
        getgenv().night_mode_Enabled = Value
        print(Value and "Night Mode Enabled" or "Night Mode Disabled")
    end
})

Tab3:AddToggle({
    Name = "Self Effect",
    Default = false,
    Callback = function(Value)
        getgenv().self_effect_Enabled = Value
        print(Value and "Self Effect Enabled" or "Self Effect Disabled")
    end
})

-- Closest Entity
local function getClosestEntity(Object)
    local closest
    local max_distance = math.huge
    for _, entity in ipairs(workspace.Alive:GetChildren()) do
        if entity.Name ~= local_player.Name then
            local distance = (Object.Position - entity.HumanoidRootPart.Position).Magnitude
            if distance < max_distance then
                closest = entity
                max_distance = distance
            end
        end
    end
    return closest
end

-- Resolve Parry Remote
local function resolveParryRemote()
    for _, service in ipairs(Services) do
        local temp_remote = service:FindFirstChildOfClass('RemoteEvent')
        if temp_remote and temp_remote.Name:find('\n') then
            parry_remote = temp_remote
            break
        end
    end
end

-- Aura Table
local aura_table = {
    canParry = true,
    is_Spamming = false,
    parry_Range = 15,
    spam_Range = 8,
    hit_Count = 0,
    hit_Time = tick(),
    ball_Warping = tick(),
    is_ball_Warping = false,
    target_Dead = false -- New variable to track if the target is dead
}

-- Event Listeners
ReplicatedStorage.Remotes.ParrySuccess.OnClientEvent:Connect(function()
    if getgenv().hit_effect_Enabled then
        local hit_effect = game:GetObjects("rbxassetid://18894222844")[1]
        hit_effect.Parent = Celery_Util.getBall()
        hit_effect:Emit(3)
        task.delay(5, function() hit_effect:Destroy() end)
    end
end)

ReplicatedStorage.Remotes.ParrySuccessAll.OnClientEvent:Connect(function()
    aura_table.hit_Count += 1
    task.delay(0.15, function() aura_table.hit_Count -= 1 end)
end)

workspace:WaitForChild("Balls").ChildRemoved:Connect(function()
    aura_table.hit_Count = 0
    aura_table.is_ball_Warping = false
    aura_table.is_Spamming = false
end)

-- Detect when the target dies
workspace.Alive.ChildRemoved:Connect(function(child)
    if child == closest_Entity then
        aura_table.target_Dead = true
        aura_table.is_Spamming = false -- Stop spamming when the target is dead
    end
end)

-- Auto Parry and Auto Spam Functionality
RunService.RenderStepped:Connect(function()
    if getgenv().auto_parry_Enabled then
        closest_Entity = getClosestEntity(local_player.Character.HumanoidRootPart)
        if closest_Entity and (local_player.Character.HumanoidRootPart.Position - closest_Entity.HumanoidRootPart.Position).Magnitude <= aura_table.parry_Range then
            parry_remote:FireServer() -- Fire the parry remote
        end
    end

    if getgenv().auto_spam_Enabled then
        if closest_Entity and (local_player.Character.HumanoidRootPart.Position - closest_Entity.HumanoidRootPart.Position).Magnitude <= aura_table.spam_Range then
            -- Replace this line with your spam action
            parry_remote:FireServer() -- Example action (you may need to replace this)
        end
    end
end)

-- Initialize the script
initialize("Celery_Data")
optimizePerformance()

-- Inisialisasi Orion Library
OrionLib:Init()
print("Orion Library initialized")
